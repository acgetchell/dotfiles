#!/bin/bash

# Turn on the app firewall
sudo defaults write /Library/Preferences/com.apple.alf globalstate -bool true
sudo defaults write /Library/Preferences/com.apple.alf loggingenabled -bool true
sudo defaults write /Library/Preferences/com.apple.alf stealthenabled -bool true
sudo defaults write /Library/Preferences/com.apple.alf allowsignedenabled -bool false
sudo defaults write /Library/Preferences/com.apple.alf allowdownloadsignedenabled -bool false
sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.pfctl.plist


#Run in home directory
sudo -v

brew update
brew upgrade
brew tap homebrew/versions
brew tap caskroom/cask
brew tap homebrew/dupes

# General devel
brew install git
brew install git-subrepo
brew install git-lfs
brew install git-flow
brew cask install atom
# Packages:
apm install Zen
apm install atom-material-syntax
apm install atom-material-ui
apm install autocomplete-clang
apm install autocomplete-haskell
apm install dash
apm install git-projects
apm install haskell-ghc-mod
apm install haskell-grammar
apm install ide-haskell
apm install ide-haskell-cabal
apm install ide-haskell-repl
apm install language-cmake
apm install language-haskell
apm install language-latex
apm install language-r
apm install latex
apm install linter
apm install linter-cpplint
apm install linter-clang
apm install linter-pylint
apm install merge-conflicts
apm install minimap
apm install run-command
apm install script
apm install term2
apm install tool-bar
apm install tool-bar-almighty
apm install travis-ci-status
apm install unity-ui

brew cask install gitkraken
# Run brew doctor and fix PATH so that /usr/local/bin comes first

# C++ devel
# Eclipse/Cevelop and clion requires java
brew cask install java
brew cask install clion
brew cask install sourcetrail
brew install gdb
echo "set startup-with-shell off" >> ~/.gdbinit
# Create Keychain Cert to codesign gdb
codesign -s gdbcert /usr/local/bin/gdb
# Configure eclipse to point to /usr/local/bin/gdb
# brew install emscripten
# brew install open-mpi --c++11 --enable-mpi-thread-multiple
brew install boost --without-single
brew install doxygen --with-graphviz --with-llvm --with-qt
# GraphViz generates nice diagrams for doxygen
brew linkapps
# Requires xquartz and a full install of Xcode
brew cask install xquartz
# To run X11/Xquartz apps locally from remote clients
# Create ~/.ssh/config and add in:
# ForwardX11 yes
# ForwardX11Trusted yes
#brew install graphviz --with-app --with-x
brew install cmake
brew install cpputest
# Manual install of gmock and gtest
brew install ninja
# Intel thread building blocks
brew install tbb
brew install cppcheck
brew install eigen
brew install cgal --with-eigen --with-qt

# Python devel
# MacOS default python doesn't work with pelican
brew cask install miniconda
conda update conda
conda config --add channels conda-forge
conda config --set always_yes True
conda config --set show_channel_urls True
# brew install python
# brew linkapps python
# sudo pip install --upgrade pip setuptools
# sudo pip install virtualenv virtualenvwrapper
# brew install pyenv
#sudo pip install pylint
#sudo pip install bigfloat
#sudo pip install sympy
# Pelican blogging
mkvirtualenv pelican
workon pelican
pip install --upgrade pelican
pip install --upgrade markdown typogrify beautifulsoup4 webassets ghp-import
# `source deactivate` to leave virtualenv

# Docker + Jupyter + Sagemath
brew cask install docker
brew cask install kitematic
docker pull jupyter/datascience-notebook
docker pull sagemath/sagemath-jupyter

# C# Devel
brew cask install dotnet
brew cask install visual-studio-code
# brew install node
# npm install -g yo bower
# npm install -g generator-aspnet

# curl -sSL curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_BRANCH=dev sh && source ~/.dnx/dnvm/dnvm.sh
# dnvm upgrade -r mono
# dnu restore
# brew install node
# npm install -g gulp

# R devel
brew tap brewsci/science
brew install r
brew cask install rstudio
apm install language-r
# STAN
brew install cmdstan

# Haskell devel
brew install ghc
brew install cabal-install
brew install haskell-stack
cabal update
cabal install happy
cabal install ghc-mod
cabal install stylish-haskell

# Julia and iJulia
brew cask install julia
# julia> Pkg.add("IJulia")
# See https://github.com/JuliaLang/IJulia.jl for details

# .NET
brew cask install visual-studio-code
brew install node-js
brew cask install dotnet-sdk


# Research
brew cask install zotero
# xpdf for X11, geomview and Zotero
brew install homebrew/X11/xpdf
brew cask install anki
brew cask install xquartz
# Geomview generates 2D and 3D diagrams for CGAL
# but it needs xquartz first
brew install geomview
brew cask install ipe

# Utilities
#brew cask install shiftit
brew install ag
#brew cask install fiddler
#brew cask install crashplan
brew cask install keybase
brew cask install prey
#brew cask install screenhero
brew install shellcheck
brew install ssh-copy-id
brew cask install the-unarchiver


# Must have git first
# Install homesick
gem install homesick
homesick clone https://github.com/acgetchell/dotfiles.git

# Install bash_it
git clone https://github.com/Bash-it/bash-it.git ~/.bash_it
~/.bash_it/install.sh
# Pull .bash_profile from github dotfiles, overwriting the one bash_it just made
homesick clone acgetchell/dotfiles
homesick symlink dotfiles

# Applications
brew cask install cleanmymac
# brew cask install box-sync
brew cask install evernote
brew cask install firefox
brew cask install gitter
brew cask install google-chrome
# brew cask install macid
brew cask install mactex
# Fix path in .bashrc so tlmgr is accessible
sudo tlmgr update --self
sudo tlmgr update --all
# brew cask install menumeters
# brew cask install skype
# brew cask install torbrowser
brew cask install vmware-fusion
# So LaTexIt can export to SVG
brew install pdf2svg

# Fun
brew cask install battle-net
brew cask install garmin-basecamp
brew cask install handbrake
brew cask install imageoptim
# brew cask install lastfm
# brew cask install steam

# Link installed apps to ~/Applications
brew linkapps

# Cleanup
brew cleanup
